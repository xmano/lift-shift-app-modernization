App Modernization by Containerization 
=====================================

1. Creating a GKE Cluster

gcloud container clusters create app-01 \
--project=$DEVSHELL_PROJECT_ID --zone=us-west1-a --machine-type n1-standard-4 \
--cluster-version=1.19.12 --release-channel=stable --image-type ubuntu \
--num-nodes 1 --enable-stackdriver-kubernetes \
--subnetwork "projects/$DEVSHELL_PROJECT_ID/regions/us-west1/subnetworks/default"

2. Install Migrate for Anthos

2.1 Create a service account : tcb-m4a-install

gcloud iam service-accounts create tcb-m4a-install \
--project=$DEVSHELL_PROJECT_ID

2.2 Assigning a storage.admin role to tcb-m4a-install

gcloud projects add-iam-policy-binding $DEVSHELL_PROJECT_ID \
--member="serviceAccount:tcb-m4a-install@$DEVSHELL_PROJECT_ID.iam.gserviceaccount.com" \
--role="roles/storage.admin"


3. Creating and downloading the serviceaccount tcb-m4a-install key

gcloud iam service-accounts keys create tcb-m4a-install.json \
--iam-account=tcb-m4a-install@$DEVSHELL_PROJECT_ID.iam.gserviceaccount.com \
--project=$DEVSHELL_PROJECT_ID


4. Connecting to K8s cluster

gcloud container clusters get-credentials app-01 \
--zone us-west1-a --project $DEVSHELL_PROJECT_ID

5. Setting up the Migrate for Anthos components in GKE cluster app-01 

migctl setup install --json-key=tcb-m4a-install.json


6. Validate the Migrate for Anthos installation:

migctl doctor

----------------------------------------------------------------

VM Migration

1. Creating a service account tcb-m4a-ce-src

gcloud iam service-accounts create tcb-m4a-ce-src \
--project=$DEVSHELL_PROJECT_ID

2. Assigning the role compute.viewer to service account : tcb-m4a-ce-src

gcloud projects add-iam-policy-binding $DEVSHELL_PROJECT_ID \
--member="serviceAccount:tcb-m4a-ce-src@$DEVSHELL_PROJECT_ID.iam.gserviceaccount.com" \
--role="roles/compute.viewer"

3. Assigning the role storage.admin 


gcloud projects add-iam-policy-binding $DEVSHELL_PROJECT_ID \
--member="serviceAccount:tcb-m4a-ce-src@$DEVSHELL_PROJECT_ID.iam.gserviceaccount.com" \
--role="roles/compute.storageAdmin"

4. Creating and downloading the serviceaccount tcb-m4a-ce-src key:

gcloud iam service-accounts keys create tcb-m4a-ce-src.json \
--iam-account=tcb-m4a-ce-src@$DEVSHELL_PROJECT_ID.iam.gserviceaccount.com \
--project=$DEVSHELL_PROJECT_ID

5. Defining the 'CE'(ComputeEngine) as a source:

migctl source create ce app-01-source --project $DEVSHELL_PROJECT_ID \
--json-key=tcb-m4a-ce-src.json



Creating/Downloading and Checking theMigration plan

1. Creating the Migration Plan 

migctl migration create my-migration --source app-01-source --vm-id app-01 --intent Image



migctl migration create my-migration --source app-01-source \
--vm-id app-01 --intent Image

2. 












______________________________________________________________________

ðŸ’¡ðŸ’¡

Wouldn't it be better to implement the provisioning code in Terraform 
rather than learning and typing the CLI?


This is similar to Hybrid App development in Mobile Apps, where you 
code the app in web technologies instead of myriad native languages
& SDKs